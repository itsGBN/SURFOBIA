//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/InputSystem/PS5Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PS5Input: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PS5Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PS5Input"",
    ""maps"": [
        {
            ""name"": ""PS5Map"",
            ""id"": ""7df492bd-081a-4d72-8190-f0ad022c9bfd"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""adf4a054-2650-4e39-bbaa-76a200b9cbf7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""7c0aeec3-f54b-42e2-a62d-3ec181988deb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""dfcb3a4e-1290-4432-a3c8-c497f020b54e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grind"",
                    ""type"": ""Button"",
                    ""id"": ""f62aacda-cf0a-4509-9c9a-bf6b3e00f6bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""a1d78bd9-5ed2-4553-a599-46a0a236e72f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""07328a7e-19cf-4078-a15c-1e5f7ea8c0da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""9b167c0e-d6ee-4cf9-8d8e-40ca5d954252"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""262ef7c9-f8c7-452e-a53e-5decc9acc48b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""2a4c7210-298a-4828-b03f-ebbab069f850"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c508fb8c-935a-4afc-8f6c-77a993e2259c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""caa62db3-9b17-4a3b-9252-5e1bb117a613"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a3976111-65b3-4823-bdf5-1a68224731bc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d57f9855-e129-47b7-925b-69d159c6d3ce"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""04d494d4-02cd-4a71-ad47-cbe9fc3e1183"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34d78974-3572-4763-a357-805b528f21c4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3827db5b-8314-4166-b6fe-a5e1cb55585b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afaeedec-27be-48e7-9e28-34d203857049"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""105a257d-6f9c-40f4-a166-73ebe646c937"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cd8024-7691-4c85-b8c3-47eaf8aa5431"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6447abf4-9e7a-4006-9335-241fa8581aae"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c79865ec-5e3c-4bb1-8589-b88c7fea08ca"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""779c9527-ead1-4b18-8197-81fcf3aa6bc0"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a67e28d-f7ac-495b-b5bd-8f67c8a4736d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16e52a80-118d-4d91-9b04-b0de5630f331"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea6199d8-9db4-4abb-abab-053b4ca61ba8"",
                    ""path"": ""<Mouse>/radius"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PS5Map
        m_PS5Map = asset.FindActionMap("PS5Map", throwIfNotFound: true);
        m_PS5Map_Move = m_PS5Map.FindAction("Move", throwIfNotFound: true);
        m_PS5Map_Look = m_PS5Map.FindAction("Look", throwIfNotFound: true);
        m_PS5Map_Jump = m_PS5Map.FindAction("Jump", throwIfNotFound: true);
        m_PS5Map_Grind = m_PS5Map.FindAction("Grind", throwIfNotFound: true);
        m_PS5Map_Dash = m_PS5Map.FindAction("Dash", throwIfNotFound: true);
        m_PS5Map_Menu = m_PS5Map.FindAction("Menu", throwIfNotFound: true);
        m_PS5Map_Restart = m_PS5Map.FindAction("Restart", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PS5Map
    private readonly InputActionMap m_PS5Map;
    private List<IPS5MapActions> m_PS5MapActionsCallbackInterfaces = new List<IPS5MapActions>();
    private readonly InputAction m_PS5Map_Move;
    private readonly InputAction m_PS5Map_Look;
    private readonly InputAction m_PS5Map_Jump;
    private readonly InputAction m_PS5Map_Grind;
    private readonly InputAction m_PS5Map_Dash;
    private readonly InputAction m_PS5Map_Menu;
    private readonly InputAction m_PS5Map_Restart;
    public struct PS5MapActions
    {
        private @PS5Input m_Wrapper;
        public PS5MapActions(@PS5Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PS5Map_Move;
        public InputAction @Look => m_Wrapper.m_PS5Map_Look;
        public InputAction @Jump => m_Wrapper.m_PS5Map_Jump;
        public InputAction @Grind => m_Wrapper.m_PS5Map_Grind;
        public InputAction @Dash => m_Wrapper.m_PS5Map_Dash;
        public InputAction @Menu => m_Wrapper.m_PS5Map_Menu;
        public InputAction @Restart => m_Wrapper.m_PS5Map_Restart;
        public InputActionMap Get() { return m_Wrapper.m_PS5Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PS5MapActions set) { return set.Get(); }
        public void AddCallbacks(IPS5MapActions instance)
        {
            if (instance == null || m_Wrapper.m_PS5MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PS5MapActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Grind.started += instance.OnGrind;
            @Grind.performed += instance.OnGrind;
            @Grind.canceled += instance.OnGrind;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Restart.started += instance.OnRestart;
            @Restart.performed += instance.OnRestart;
            @Restart.canceled += instance.OnRestart;
        }

        private void UnregisterCallbacks(IPS5MapActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Grind.started -= instance.OnGrind;
            @Grind.performed -= instance.OnGrind;
            @Grind.canceled -= instance.OnGrind;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Restart.started -= instance.OnRestart;
            @Restart.performed -= instance.OnRestart;
            @Restart.canceled -= instance.OnRestart;
        }

        public void RemoveCallbacks(IPS5MapActions instance)
        {
            if (m_Wrapper.m_PS5MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPS5MapActions instance)
        {
            foreach (var item in m_Wrapper.m_PS5MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PS5MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PS5MapActions @PS5Map => new PS5MapActions(this);
    public interface IPS5MapActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnGrind(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
    }
}
